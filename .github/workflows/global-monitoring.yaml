# This workflow uses actions to automatically run the global monitoring
# script.

name: global-monitoring

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: macos-latest
    
    steps:
      - uses: actions/checkout@v3
      - name: Set up R 4.2.3
        uses: r-lib/actions/setup-r@f57f1301a053485946083d7a45022b278929a78a
        with:
          r-version: 4.2.3
      - name: Set RENV_PATHS_ROOT
        shell: bash
        run: |
          echo "RENV_PATHS_ROOT=${{ runner.temp }}/renv" >> $GITHUB_ENV
      - name: Install and activate renv
        run: |
          install.packages("renv")
          renv::activate()
        shell: Rscript {0}
      - name: Get R and OS version
        id: get-version
        run: |
          cat("##[set-output name=os-version;]", sessionInfo()$running, "\n", sep = "")
          cat("##[set-output name=r-version;]", R.Version()$version.string, sep = "")
        shell: Rscript {0}
      - name: Restore Renv package cache
        uses: actions/cache@v3
        with:
          path: ${{ env.RENV_PATHS_ROOT }}
          key: ${{ steps.get-version.outputs.os-version }}-${{ steps.get-version.outputs.r-version }}-${{ inputs.cache-version }}-${{ hashFiles('renv.lock') }}
          restore-keys: ${{ steps.get-version.outputs.os-version }}-${{ steps.get-version.outputs.r-version }}-${{inputs.cache-version }}-
      - name: Create authorization JSON
        id: create-json
        uses: jsdaniell/create-json@1.2.2
        with:
          name: "auth.json"
          json: ${{ secrets.GCP_CREDENTIALS }}
      - name: Create R environment from GitHub secrets
        run: |
          echo IDMC_API="$IDMC_API" >> ~/.Renviron
          echo IPC_API_KEY="$IPC_API_KEY" >> ~/.Renviron
          echo OPENAI_API_KEY="$OPENAI_API_KEY" >> ~/.Renviron
          echo GLOBAL_MONITORING_JSON="auth.json" >> ~/.Renviron
      - name: Run global monitoring
        run: |
          source(file.path("src", "run.R"))
        shell: Rscript {0}